#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    May 12, 2022 10:37:32 AM +07  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from Backend.package import Package
from Backend.station import Station
from Backend.admin import Admin
from Backend.employee import Employee
import all_support

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = 'gray40' # X11 color: #666666
        _ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
        _ana2color = 'beige' # X11 color: #f5f5dc
        _tabfg1 = 'black' 
        _tabfg2 = 'black' 
        _tabbg1 = 'grey75' 
        _tabbg2 = 'grey89' 
        _bgmode = 'light' 

        top.geometry("1200x700+315+155")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1,  1)
        top.title("E-tracking - Search")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#0080ff")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        
        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0, rely=0, height=700, width=1200)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        photo_location = "img/user_bg (Custom).png"
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)

        self.Frame2 = tk.Frame(self.Frame1)
        self.Frame2.place(relx=0.1, rely=0.1, relheight=0.779, relwidth=0.795)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#ffffff")
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")

        self.Button_ok = tk.Button(self.Frame2)
        self.Button_ok.place(relx=0.43, rely=0.917, height=33, width=136)
        self.Button_ok.configure(activebackground="beige")
        self.Button_ok.configure(activeforeground="#000000")
        self.Button_ok.configure(background="#d9d9d9")
        self.Button_ok.configure(compound='left')
        self.Button_ok.configure(disabledforeground="#a3a3a3")
        self.Button_ok.configure(foreground="#000000")
        self.Button_ok.configure(highlightbackground="#d9d9d9")
        self.Button_ok.configure(highlightcolor="black")
        self.Button_ok.configure(pady="0")
        self.Button_ok.configure(text='''OK''')
        self.Button_ok.configure(command=self.ok_btn)

        self.Entry_package_ID = tk.Entry(self.Frame2)
        self.Entry_package_ID.place(relx=0.052, rely=0.22, height=74, relwidth=0.727)
        self.Entry_package_ID.configure(background="white")
        self.Entry_package_ID.configure(disabledforeground="#a3a3a3")
        self.Entry_package_ID.configure(font="TkFixedFont")
        self.Entry_package_ID.configure(foreground="#000000")
        self.Entry_package_ID.configure(highlightbackground="#d9d9d9")
        self.Entry_package_ID.configure(highlightcolor="black")
        self.Entry_package_ID.configure(insertbackground="black")
        self.Entry_package_ID.configure(justify='center')
        self.Entry_package_ID.configure(selectbackground="#c4c4c4")
        self.Entry_package_ID.configure(selectforeground="black")

        self.Button_search = tk.Button(self.Frame2)
        self.Button_search.place(relx=0.797, rely=0.22, height=73, width=146)
        self.Button_search.configure(activebackground="beige")
        self.Button_search.configure(activeforeground="#000000")
        self.Button_search.configure(background="#00f279")
        self.Button_search.configure(compound='left')
        self.Button_search.configure(disabledforeground="#a3a3a3")
        self.Button_search.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.Button_search.configure(foreground="#ffffff")
        self.Button_search.configure(highlightbackground="#d9d9d9")
        self.Button_search.configure(highlightcolor="black")
        self.Button_search.configure(pady="0")
        self.Button_search.configure(text='''Search''')
        self.Button_search.configure(command=self.search_btn)

        self.Label1 = tk.Label(self.Frame2)
        self.Label1.place(relx=0.052, rely=0.11, height=56, width=242)
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Enter your Package's ID''')

        self.Label1 = tk.Label(self.Frame2)
        self.Label1.place(relx=0.055, rely=0.514, height=86, width=542)
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''''')
        
        self.Button_log_out = tk.Button(self.top)
        self.Button_log_out.place(relx=0.900, rely=0.029, height=100, width=100)
        self.Button_log_out.configure(activebackground="beige")
        self.Button_log_out.configure(activeforeground="#000000")
        self.Button_log_out.configure(background="#f5010a")
        self.Button_log_out.configure(compound='left')
        self.Button_log_out.configure(disabledforeground="#a3a3a3")
        self.Button_log_out.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Button_log_out.configure(foreground="#ffffff")
        self.Button_log_out.configure(highlightbackground="#d9d9d9")
        self.Button_log_out.configure(highlightcolor="black")
        self.Button_log_out.configure(pady="0")
        # self.Button_log_out.configure(text='''Log Out''')
        self.Button_log_out.configure(command=self.log_out_btn)
        photo_location = "img/Log Out (Custom).png"
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Button_log_out.configure(image=_img4)

    def search_btn(self):
        try:
            package_id = self.Entry_package_ID.get()
            for i in Station.All_station_list:
                pack = i.search_packages(int(package_id))
                if pack == None:
                    print(pack)
                    return self.Label1.configure(text="Not Found")
                else:
                    print(pack)
                    return self.Label1.configure(text=pack)
        except (ValueError, AttributeError) :
            return self.Label1.configure(text='Enter Only Number')
    
    def ok_btn(self):
        print('ok')
    
    def log_out_btn(self):
        self.top.destroy() 
        all_support.main_login_page1()
        if __name__ == '__main__':
            all_support.main_login_page1()

def start_up():
    all_support.main_search_page()

if __name__ == '__main__':
    all_support.main_search_page()




